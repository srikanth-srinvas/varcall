/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // FASTQC: Quality control for raw reads
    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // CUTADAPT: Adapter trimming
    withName: CUTADAPT {
        ext.args = '--minimum-length 30' // Example option; adjust as needed
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // BWA: Alignment
    withName: BWA_MEM {
        ext.args = '' // Add specific BWA options here if needed
        publishDir = [
            path: { "${params.outdir}/bwa" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // SAMTOOLS: Sorting BAM files
    withName: SAMTOOLS_SORT {
        ext.args = '' // Add specific sorting options here
        publishDir = [
            path: { "${params.outdir}/samtools_sort" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // SAMTOOLS: Indexing BAM files
    withName: SAMTOOLS_INDEX {
        ext.args = '' // Add indexing options here if necessary
        publishDir = [
            path: { "${params.outdir}/samtools_index" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // FREEBAYES: Variant calling
    withName: FREEBAYES {
        ext.args = '' // Specify options such as ploidy, regions, etc.
        publishDir = [
            path: { "${params.outdir}/freebayes" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // SNPEFF: Annotating variants
    withName: SNPEFF_SNPEFF {
        ext.args = '' // Add options for SnpEff if needed (e.g., database name)
        publishDir = [
            path: { "${params.outdir}/snpeff" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // MULTIQC: Aggregate quality control reports
    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}